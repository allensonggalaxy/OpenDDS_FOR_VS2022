// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p23
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:373

#include "DCPS/DdsDcps_pch.h"
#include "OpenddsDcpsExtTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "OpenddsDcpsExtTypeSupportC.inl"
#endif /* !defined INLINE */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport.

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport>::duplicate (
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr p)
{
  return OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport>::release (
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport>::nil (void)
{
  return OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport>::marshal (
    const OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::ParticipantLocationBuiltinTopicDataTypeSupport (void)
{}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::~ParticipantLocationBuiltinTopicDataTypeSupport (void)
{
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantLocationBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<ParticipantLocationBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantLocationBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<ParticipantLocationBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_duplicate (ParticipantLocationBuiltinTopicDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_tao_release (ParticipantLocationBuiltinTopicDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/ParticipantLocationBuiltinTopicDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/ParticipantLocationBuiltinTopicDataTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter.

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter>::duplicate (
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr p)
{
  return OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter>::release (
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter>::nil (void)
{
  return OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter>::marshal (
    const OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::ParticipantLocationBuiltinTopicDataDataWriter (void)
{}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::~ParticipantLocationBuiltinTopicDataDataWriter (void)
{
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantLocationBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<ParticipantLocationBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantLocationBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<ParticipantLocationBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_duplicate (ParticipantLocationBuiltinTopicDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_tao_release (ParticipantLocationBuiltinTopicDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/ParticipantLocationBuiltinTopicDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/ParticipantLocationBuiltinTopicDataDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader.

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader>::duplicate (
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr p)
{
  return OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader>::release (
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader>::nil (void)
{
  return OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader>::marshal (
    const OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::ParticipantLocationBuiltinTopicDataDataReader (void)
{}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::~ParticipantLocationBuiltinTopicDataDataReader (void)
{
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantLocationBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<ParticipantLocationBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantLocationBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<ParticipantLocationBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_duplicate (ParticipantLocationBuiltinTopicDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_tao_release (ParticipantLocationBuiltinTopicDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/ParticipantLocationBuiltinTopicDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/ParticipantLocationBuiltinTopicDataDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::ParticipantLocationBuiltinTopicDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::ConnectionRecordTypeSupport.

OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordTypeSupport>::duplicate (
    OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr p)
{
  return OpenDDS::DCPS::ConnectionRecordTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordTypeSupport>::release (
    OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordTypeSupport>::nil (void)
{
  return OpenDDS::DCPS::ConnectionRecordTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordTypeSupport>::marshal (
    const OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::ConnectionRecordTypeSupport::ConnectionRecordTypeSupport (void)
{}

OpenDDS::DCPS::ConnectionRecordTypeSupport::~ConnectionRecordTypeSupport (void)
{
}

OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr
OpenDDS::DCPS::ConnectionRecordTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ConnectionRecordTypeSupport::_duplicate (
      dynamic_cast<ConnectionRecordTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr
OpenDDS::DCPS::ConnectionRecordTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ConnectionRecordTypeSupport::_duplicate (
      dynamic_cast<ConnectionRecordTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr
OpenDDS::DCPS::ConnectionRecordTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::ConnectionRecordTypeSupport_ptr
OpenDDS::DCPS::ConnectionRecordTypeSupport::_duplicate (ConnectionRecordTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::ConnectionRecordTypeSupport::_tao_release (ConnectionRecordTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::ConnectionRecordTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/ConnectionRecordTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::ConnectionRecordTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/ConnectionRecordTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::ConnectionRecordTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::ConnectionRecordDataWriter.

OpenDDS::DCPS::ConnectionRecordDataWriter_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataWriter>::duplicate (
    OpenDDS::DCPS::ConnectionRecordDataWriter_ptr p)
{
  return OpenDDS::DCPS::ConnectionRecordDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataWriter>::release (
    OpenDDS::DCPS::ConnectionRecordDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::ConnectionRecordDataWriter_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataWriter>::nil (void)
{
  return OpenDDS::DCPS::ConnectionRecordDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataWriter>::marshal (
    const OpenDDS::DCPS::ConnectionRecordDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::ConnectionRecordDataWriter::ConnectionRecordDataWriter (void)
{}

OpenDDS::DCPS::ConnectionRecordDataWriter::~ConnectionRecordDataWriter (void)
{
}

OpenDDS::DCPS::ConnectionRecordDataWriter_ptr
OpenDDS::DCPS::ConnectionRecordDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ConnectionRecordDataWriter::_duplicate (
      dynamic_cast<ConnectionRecordDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ConnectionRecordDataWriter_ptr
OpenDDS::DCPS::ConnectionRecordDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ConnectionRecordDataWriter::_duplicate (
      dynamic_cast<ConnectionRecordDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ConnectionRecordDataWriter_ptr
OpenDDS::DCPS::ConnectionRecordDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::ConnectionRecordDataWriter_ptr
OpenDDS::DCPS::ConnectionRecordDataWriter::_duplicate (ConnectionRecordDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::ConnectionRecordDataWriter::_tao_release (ConnectionRecordDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::ConnectionRecordDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/ConnectionRecordDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::ConnectionRecordDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/ConnectionRecordDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::ConnectionRecordDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::ConnectionRecordDataReader.

OpenDDS::DCPS::ConnectionRecordDataReader_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataReader>::duplicate (
    OpenDDS::DCPS::ConnectionRecordDataReader_ptr p)
{
  return OpenDDS::DCPS::ConnectionRecordDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataReader>::release (
    OpenDDS::DCPS::ConnectionRecordDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::ConnectionRecordDataReader_ptr
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataReader>::nil (void)
{
  return OpenDDS::DCPS::ConnectionRecordDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::ConnectionRecordDataReader>::marshal (
    const OpenDDS::DCPS::ConnectionRecordDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::ConnectionRecordDataReader::ConnectionRecordDataReader (void)
{}

OpenDDS::DCPS::ConnectionRecordDataReader::~ConnectionRecordDataReader (void)
{
}

OpenDDS::DCPS::ConnectionRecordDataReader_ptr
OpenDDS::DCPS::ConnectionRecordDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ConnectionRecordDataReader::_duplicate (
      dynamic_cast<ConnectionRecordDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ConnectionRecordDataReader_ptr
OpenDDS::DCPS::ConnectionRecordDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ConnectionRecordDataReader::_duplicate (
      dynamic_cast<ConnectionRecordDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::ConnectionRecordDataReader_ptr
OpenDDS::DCPS::ConnectionRecordDataReader::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::ConnectionRecordDataReader_ptr
OpenDDS::DCPS::ConnectionRecordDataReader::_duplicate (ConnectionRecordDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::ConnectionRecordDataReader::_tao_release (ConnectionRecordDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::ConnectionRecordDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/ConnectionRecordDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::ConnectionRecordDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/ConnectionRecordDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::ConnectionRecordDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport.

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport>::duplicate (
    OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr p)
{
  return OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport>::release (
    OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport>::nil (void)
{
  return OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport>::marshal (
    const OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::InternalThreadBuiltinTopicDataTypeSupport (void)
{}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::~InternalThreadBuiltinTopicDataTypeSupport (void)
{
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return InternalThreadBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<InternalThreadBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return InternalThreadBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<InternalThreadBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_duplicate (InternalThreadBuiltinTopicDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_tao_release (InternalThreadBuiltinTopicDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/InternalThreadBuiltinTopicDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/InternalThreadBuiltinTopicDataTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::InternalThreadBuiltinTopicDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter.

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter>::duplicate (
    OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr p)
{
  return OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter>::release (
    OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter>::nil (void)
{
  return OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter>::marshal (
    const OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::InternalThreadBuiltinTopicDataDataWriter (void)
{}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::~InternalThreadBuiltinTopicDataDataWriter (void)
{
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return InternalThreadBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<InternalThreadBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return InternalThreadBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<InternalThreadBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_duplicate (InternalThreadBuiltinTopicDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_tao_release (InternalThreadBuiltinTopicDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/InternalThreadBuiltinTopicDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/InternalThreadBuiltinTopicDataDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_interface\interface_cs.cpp:50



// Traits specializations for OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader.

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader>::duplicate (
    OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr p)
{
  return OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader>::release (
    OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader>::nil (void)
{
  return OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader>::marshal (
    const OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::InternalThreadBuiltinTopicDataDataReader (void)
{}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::~InternalThreadBuiltinTopicDataDataReader (void)
{
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return InternalThreadBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<InternalThreadBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return InternalThreadBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<InternalThreadBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_nil (void)
{
  return 0;
}

OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader_ptr
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_duplicate (InternalThreadBuiltinTopicDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_tao_release (InternalThreadBuiltinTopicDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/InternalThreadBuiltinTopicDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/DCPS/InternalThreadBuiltinTopicDataDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::DCPS::InternalThreadBuiltinTopicDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}


OPENDDS_END_VERSIONED_NAMESPACE_DECL


