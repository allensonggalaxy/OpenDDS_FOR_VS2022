// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p23
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_codegen.cpp:373

#include "DCPS/DdsDcps_pch.h"
#include "OpenddsDcpsExtC.h"
#include "tao/CDR.h"

#if !defined (__ACE_INLINE__)
#include "OpenddsDcpsExtC.inl"
#endif /* !defined INLINE */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_cs.cpp:107



#if !defined (_OPENDDS_DCPS_LOCATORSEQ_CS_)
#define _OPENDDS_DCPS_LOCATORSEQ_CS_

OpenDDS::DCPS::LocatorSeq::LocatorSeq (void)
{}

OpenDDS::DCPS::LocatorSeq::LocatorSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< Locator_t> (max)
{}

OpenDDS::DCPS::LocatorSeq::LocatorSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    OpenDDS::DCPS::Locator_t * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence< Locator_t>
    (max, length, buffer, release)
{}

OpenDDS::DCPS::LocatorSeq::~LocatorSeq (void)
{}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_cs.cpp:107



#if !defined (_OPENDDS_DCPS_MESSAGECOUNTSEQUENCE_CS_)
#define _OPENDDS_DCPS_MESSAGECOUNTSEQUENCE_CS_

OpenDDS::DCPS::MessageCountSequence::MessageCountSequence (void)
{}

OpenDDS::DCPS::MessageCountSequence::MessageCountSequence (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< MessageCount> (max)
{}

OpenDDS::DCPS::MessageCountSequence::MessageCountSequence (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    OpenDDS::DCPS::MessageCount * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence< MessageCount>
    (max, length, buffer, release)
{}

OpenDDS::DCPS::MessageCountSequence::~MessageCountSequence (void)
{}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_cs.cpp:107



#if !defined (_OPENDDS_DCPS_GUIDCOUNTSEQUENCE_CS_)
#define _OPENDDS_DCPS_GUIDCOUNTSEQUENCE_CS_

OpenDDS::DCPS::GuidCountSequence::GuidCountSequence (void)
{}

OpenDDS::DCPS::GuidCountSequence::GuidCountSequence (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< GuidCount> (max)
{}

OpenDDS::DCPS::GuidCountSequence::GuidCountSequence (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    OpenDDS::DCPS::GuidCount * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence< GuidCount>
    (max, length, buffer, release)
{}

OpenDDS::DCPS::GuidCountSequence::~GuidCountSequence (void)
{}

#endif /* end #if !defined */


// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\sequence_cs.cpp:107



#if !defined (_OPENDDS_DCPS_TRANSPORTSTATISTICSSEQUENCE_CS_)
#define _OPENDDS_DCPS_TRANSPORTSTATISTICSSEQUENCE_CS_

OpenDDS::DCPS::TransportStatisticsSequence::TransportStatisticsSequence (void)
{}

OpenDDS::DCPS::TransportStatisticsSequence::TransportStatisticsSequence (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< TransportStatistics> (max)
{}

OpenDDS::DCPS::TransportStatisticsSequence::TransportStatisticsSequence (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    OpenDDS::DCPS::TransportStatistics * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence< TransportStatistics>
    (max, length, buffer, release)
{}

OpenDDS::DCPS::TransportStatisticsSequence::~TransportStatisticsSequence (void)
{}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::ParticipantLocationBuiltinTopicData &_tao_aggregate)
{
  DDS::OctetArray16_forany _tao_aggregate_guid
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((DDS::OctetArray16_slice*) (
      #else
      (const_cast<
          DDS::OctetArray16_slice*> (
      #endif
          _tao_aggregate.guid
        )
    );
  return
    (strm << _tao_aggregate_guid) &&
    (strm << _tao_aggregate.location) &&
    (strm << _tao_aggregate.change_mask) &&
    (strm << _tao_aggregate.local_addr.in ()) &&
    (strm << _tao_aggregate.local_timestamp) &&
    (strm << _tao_aggregate.ice_addr.in ()) &&
    (strm << _tao_aggregate.ice_timestamp) &&
    (strm << _tao_aggregate.relay_addr.in ()) &&
    (strm << _tao_aggregate.relay_timestamp) &&
    (strm << _tao_aggregate.local6_addr.in ()) &&
    (strm << _tao_aggregate.local6_timestamp) &&
    (strm << _tao_aggregate.ice6_addr.in ()) &&
    (strm << _tao_aggregate.ice6_timestamp) &&
    (strm << _tao_aggregate.relay6_addr.in ()) &&
    (strm << _tao_aggregate.relay6_timestamp);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::ParticipantLocationBuiltinTopicData &_tao_aggregate)
{
  DDS::OctetArray16_forany _tao_aggregate_guid
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((DDS::OctetArray16_slice*) (
      #else
      (const_cast<
          DDS::OctetArray16_slice*> (
      #endif
          _tao_aggregate.guid
        )
    );
  return
    (strm >> _tao_aggregate_guid) &&
    (strm >> _tao_aggregate.location) &&
    (strm >> _tao_aggregate.change_mask) &&
    (strm >> _tao_aggregate.local_addr.out ()) &&
    (strm >> _tao_aggregate.local_timestamp) &&
    (strm >> _tao_aggregate.ice_addr.out ()) &&
    (strm >> _tao_aggregate.ice_timestamp) &&
    (strm >> _tao_aggregate.relay_addr.out ()) &&
    (strm >> _tao_aggregate.relay_timestamp) &&
    (strm >> _tao_aggregate.local6_addr.out ()) &&
    (strm >> _tao_aggregate.local6_timestamp) &&
    (strm >> _tao_aggregate.ice6_addr.out ()) &&
    (strm >> _tao_aggregate.ice6_timestamp) &&
    (strm >> _tao_aggregate.relay6_addr.out ()) &&
    (strm >> _tao_aggregate.relay6_timestamp);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::ConnectionRecord &_tao_aggregate)
{
  DDS::OctetArray16_forany _tao_aggregate_guid
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((DDS::OctetArray16_slice*) (
      #else
      (const_cast<
          DDS::OctetArray16_slice*> (
      #endif
          _tao_aggregate.guid
        )
    );
  return
    (strm << _tao_aggregate_guid) &&
    (strm << _tao_aggregate.address.in ()) &&
    (strm << _tao_aggregate.protocol.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::ConnectionRecord &_tao_aggregate)
{
  DDS::OctetArray16_forany _tao_aggregate_guid
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((DDS::OctetArray16_slice*) (
      #else
      (const_cast<
          DDS::OctetArray16_slice*> (
      #endif
          _tao_aggregate.guid
        )
    );
  return
    (strm >> _tao_aggregate_guid) &&
    (strm >> _tao_aggregate.address.out ()) &&
    (strm >> _tao_aggregate.protocol.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::InternalThreadBuiltinTopicData &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.thread_id.in ()) &&
    (strm << _tao_aggregate.utilization);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::InternalThreadBuiltinTopicData &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.thread_id.out ()) &&
    (strm >> _tao_aggregate.utilization);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::Locator_t &_tao_aggregate)
{
  DDS::OctetArray16_forany _tao_aggregate_address
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((DDS::OctetArray16_slice*) (
      #else
      (const_cast<
          DDS::OctetArray16_slice*> (
      #endif
          _tao_aggregate.address
        )
    );
  return
    (strm << _tao_aggregate.kind) &&
    (strm << _tao_aggregate.port) &&
    (strm << _tao_aggregate_address);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::Locator_t &_tao_aggregate)
{
  DDS::OctetArray16_forany _tao_aggregate_address
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((DDS::OctetArray16_slice*) (
      #else
      (const_cast<
          DDS::OctetArray16_slice*> (
      #endif
          _tao_aggregate.address
        )
    );
  return
    (strm >> _tao_aggregate.kind) &&
    (strm >> _tao_aggregate.port) &&
    (strm >> _tao_aggregate_address);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\cdr_op_cs.cpp:95

#if !defined _TAO_CDR_OP_OpenDDS_DCPS_LocatorSeq_CPP_
#define _TAO_CDR_OP_OpenDDS_DCPS_LocatorSeq_CPP_


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::LocatorSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::LocatorSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL


#endif /* _TAO_CDR_OP_OpenDDS_DCPS_LocatorSeq_CPP_ */
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::MessageCount &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.locator) &&
    (strm << _tao_aggregate.kind) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.relay)) &&
    (strm << _tao_aggregate.send_count) &&
    (strm << _tao_aggregate.send_bytes) &&
    (strm << _tao_aggregate.send_fail_count) &&
    (strm << _tao_aggregate.send_fail_bytes) &&
    (strm << _tao_aggregate.recv_count) &&
    (strm << _tao_aggregate.recv_bytes);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::MessageCount &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.locator) &&
    (strm >> _tao_aggregate.kind) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.relay)) &&
    (strm >> _tao_aggregate.send_count) &&
    (strm >> _tao_aggregate.send_bytes) &&
    (strm >> _tao_aggregate.send_fail_count) &&
    (strm >> _tao_aggregate.send_fail_bytes) &&
    (strm >> _tao_aggregate.recv_count) &&
    (strm >> _tao_aggregate.recv_bytes);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::GuidCount &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.guid) &&
    (strm << _tao_aggregate.count);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::GuidCount &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.guid) &&
    (strm >> _tao_aggregate.count);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\cdr_op_cs.cpp:95

#if !defined _TAO_CDR_OP_OpenDDS_DCPS_MessageCountSequence_CPP_
#define _TAO_CDR_OP_OpenDDS_DCPS_MessageCountSequence_CPP_


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::MessageCountSequence &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::MessageCountSequence &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL


#endif /* _TAO_CDR_OP_OpenDDS_DCPS_MessageCountSequence_CPP_ */
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\cdr_op_cs.cpp:95

#if !defined _TAO_CDR_OP_OpenDDS_DCPS_GuidCountSequence_CPP_
#define _TAO_CDR_OP_OpenDDS_DCPS_GuidCountSequence_CPP_


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::GuidCountSequence &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::GuidCountSequence &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL


#endif /* _TAO_CDR_OP_OpenDDS_DCPS_GuidCountSequence_CPP_ */
// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_structure\cdr_op_cs.cpp:51



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::TransportStatistics &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.transport.in ()) &&
    (strm << _tao_aggregate.message_count) &&
    (strm << _tao_aggregate.writer_resend_count) &&
    (strm << _tao_aggregate.reader_nack_count);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::TransportStatistics &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.transport.out ()) &&
    (strm >> _tao_aggregate.message_count) &&
    (strm >> _tao_aggregate.writer_resend_count) &&
    (strm >> _tao_aggregate.reader_nack_count);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// C:\Users\Admin\Downloads\OpenDDS-3.20\ace_wrappers\tao\TAO_IDL\be\be_visitor_sequence\cdr_op_cs.cpp:95

#if !defined _TAO_CDR_OP_OpenDDS_DCPS_TransportStatisticsSequence_CPP_
#define _TAO_CDR_OP_OpenDDS_DCPS_TransportStatisticsSequence_CPP_


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::TransportStatisticsSequence &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::TransportStatisticsSequence &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL


#endif /* _TAO_CDR_OP_OpenDDS_DCPS_TransportStatisticsSequence_CPP_ */


OPENDDS_END_VERSIONED_NAMESPACE_DECL


